import json

def load_data():
    try:
        with open('youtube.txt','r') as file:
            return json.load(file)
        """ test=json.load
            print(type(test)) <class list> json list
            return test
        """
    except FileNotFoundError:
        return []#empty list
    #if thier is no file found it will go to except block

def save_data_helper(videos):
    with open('youtube.txt','w') as file:
        return json.dump(videos,file) 
   #a helper method whenever we pass a list in it will add it in file    

def list_all_videos(videos):
    print("\n")
    print("*"*70)
    for index, video in enumerate(videos,start=1):
        print(f"{index}. {video['name']}, Duration: {video['time']} ")
    print("\n")
    print("*"*70)

def add_video(videos):
    name=input("Enter Video name: ")
    time=input("Enter Video time: ")
    videos.append({'name': name,'time':time})
    save_data_helper(videos)

def update_video(videos):
    list_all_videos(videos)
    index=int(input("Enter the video number to update: "))
    if 1<= index <=len(videos):
        name=input("Enter the new video name: ")
        time=input("Enter the new video time: ")
        videos[index-1]={'name':name,'time':time}
        save_data_helper(videos)
    else:
        print("Invalid video index selected")

def delete_video(videos):
    list_all_videos(videos)
    index=int(input("Enter the video number to be deleted: "))
    if 1<= index <=len(videos):
        del videos[index-1]
        save_data_helper(videos)
    else:
        print("Invalid video index selected")


def main():
    videos=load_data()

    while True:

        print("\n Youtube Manager | choose an option")
        print("\n 1.List all Youtube video")
        print("\n 2. Add a Youtube video")    
        print("\n 3.Update Youtube video Detail")
        print("\n 4.Delete Youtube video")
        print("\n 5. Exit App")
        choice= input("Enter your choice: ")

        match choice:
            case '1':
                list_all_videos(videos)

            case '2':
                add_video(videos)

            case '3':
                update_video(videos)    
            
            case '4':
                delete_video(videos)   

            case '5':
                break

            case _:
                print("Invalid choice") 

if __name__ == "__main__":
    main()
